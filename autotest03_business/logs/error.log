2021-06-22 14:44:49,658 - [test_Login03.py -->line:55] - ERROR:测试编号:4,测试用例标题:大小写区分,执行失败,实际结果为:{'code': 1000, 'msg': '登录成功', 'token': 'MTYyNDM3NDI4OS42MzMxODY4OjBjZTg0ZmU5Nzk1YzBlZGE1Y2Q3NTIwMjZjMDM5NzFkNGNlNzgyN2U='}
2021-06-22 14:44:49,658 - [test_Login03.py -->line:56] - ERROR: :: {'code': 1007, 'msg': '用户名或者密码错误'} != {'code': 1000,
 'msg': '登录成功',
 'token': 'MTYyNDM3NDI4OS42MzMxODY4OjBjZTg0ZmU5Nzk1YzBlZGE1Y2Q3NTIwMjZjMDM5NzFkNGNlNzgyN2U='}
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1007, 'msg': '用户名或者密码错误'} != {'code': 1000, 'msg': '登录成功', 'token': 'MTYyNDM3NDI4O[64 chars]2U='}
- {'code': 1007, 'msg': '用户名或者密码错误'}
+ {'code': 1000,
+  'msg': '登录成功',
+  'token': 'MTYyNDM3NDI4OS42MzMxODY4OjBjZTg0ZmU5Nzk1YzBlZGE1Y2Q3NTIwMjZjMDM5NzFkNGNlNzgyN2U='}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_token_login02\test_Login03.py", line 52, in test_login
    self.assertEqual(eval(case.expect), res)
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'code': 1007, 'msg': '用户名或者密码错误'} != {'code': 1000,
 'msg': '登录成功',
 'token': 'MTYyNDM3NDI4OS42MzMxODY4OjBjZTg0ZmU5Nzk1YzBlZGE1Y2Q3NTIwMjZjMDM5NzFkNGNlNzgyN2U='}
2021-06-22 14:44:49,748 - [test_Login03.py -->line:55] - ERROR:测试编号:7,测试用例标题:大小写区分,执行失败,实际结果为:{'code': 1000, 'msg': '登录成功', 'token': 'MTYyNDM3NDI4OS43MjQ5NDEzOmY4ZjI2MWEyODIxYTA3YTBjNGM5ZmViYjVmY2I3ZGI2MjE5YzkzYzM='}
2021-06-22 14:44:49,748 - [test_Login03.py -->line:56] - ERROR: :: {'code': 1007, 'msg': '用户名或者密码错误'} != {'code': 1000,
 'msg': '登录成功',
 'token': 'MTYyNDM3NDI4OS43MjQ5NDEzOmY4ZjI2MWEyODIxYTA3YTBjNGM5ZmViYjVmY2I3ZGI2MjE5YzkzYzM='}
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1007, 'msg': '用户名或者密码错误'} != {'code': 1000, 'msg': '登录成功', 'token': 'MTYyNDM3NDI4O[64 chars]zM='}
- {'code': 1007, 'msg': '用户名或者密码错误'}
+ {'code': 1000,
+  'msg': '登录成功',
+  'token': 'MTYyNDM3NDI4OS43MjQ5NDEzOmY4ZjI2MWEyODIxYTA3YTBjNGM5ZmViYjVmY2I3ZGI2MjE5YzkzYzM='}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_token_login02\test_Login03.py", line 52, in test_login
    self.assertEqual(eval(case.expect), res)
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'code': 1007, 'msg': '用户名或者密码错误'} != {'code': 1000,
 'msg': '登录成功',
 'token': 'MTYyNDM3NDI4OS43MjQ5NDEzOmY4ZjI2MWEyODIxYTA3YTBjNGM5ZmViYjVmY2I3ZGI2MjE5YzkzYzM='}
2021-06-22 14:47:37,571 - [test_Login03.py -->line:55] - ERROR:测试编号:4,测试用例标题:大小写区分,执行失败,实际结果为:{'code': 1000, 'msg': '登录成功', 'token': 'MTYyNDM3NDQ1Ny41NDczMjQ0OjI3ZDI4MmQxOWRhYmI5OTNmNTM1MmViYzY4MmU5ZWVmNzZlNmMzM2M='}
2021-06-22 14:47:37,571 - [test_Login03.py -->line:56] - ERROR:{'code': 1007, 'msg': '用户名或者密码错误'} != {'code': 1000, 'msg': '登录成功', 'token': 'MTYyNDM3NDQ1N[64 chars]2M='}
- {'code': 1007, 'msg': '用户名或者密码错误'}
+ {'code': 1000,
+  'msg': '登录成功',
+  'token': 'MTYyNDM3NDQ1Ny41NDczMjQ0OjI3ZDI4MmQxOWRhYmI5OTNmNTM1MmViYzY4MmU5ZWVmNzZlNmMzM2M='}
Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_token_login02\test_Login03.py", line 52, in test_login
    self.assertEqual(eval(case.expect), res)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1007, 'msg': '用户名或者密码错误'} != {'code': 1000, 'msg': '登录成功', 'token': 'MTYyNDM3NDQ1N[64 chars]2M='}
- {'code': 1007, 'msg': '用户名或者密码错误'}
+ {'code': 1000,
+  'msg': '登录成功',
+  'token': 'MTYyNDM3NDQ1Ny41NDczMjQ0OjI3ZDI4MmQxOWRhYmI5OTNmNTM1MmViYzY4MmU5ZWVmNzZlNmMzM2M='}
2021-06-22 14:47:37,655 - [test_Login03.py -->line:55] - ERROR:测试编号:7,测试用例标题:大小写区分,执行失败,实际结果为:{'code': 1000, 'msg': '登录成功', 'token': 'MTYyNDM3NDQ1Ny42MzIwOTcyOjFkZGE1Mjc3M2JjZjExMDBmY2NhYTJkMWFmNjA1MWUyODEzMGU5ZDk='}
2021-06-22 14:47:37,656 - [test_Login03.py -->line:56] - ERROR:{'code': 1007, 'msg': '用户名或者密码错误'} != {'code': 1000, 'msg': '登录成功', 'token': 'MTYyNDM3NDQ1N[64 chars]Dk='}
- {'code': 1007, 'msg': '用户名或者密码错误'}
+ {'code': 1000,
+  'msg': '登录成功',
+  'token': 'MTYyNDM3NDQ1Ny42MzIwOTcyOjFkZGE1Mjc3M2JjZjExMDBmY2NhYTJkMWFmNjA1MWUyODEzMGU5ZDk='}
Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_token_login02\test_Login03.py", line 52, in test_login
    self.assertEqual(eval(case.expect), res)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1007, 'msg': '用户名或者密码错误'} != {'code': 1000, 'msg': '登录成功', 'token': 'MTYyNDM3NDQ1N[64 chars]Dk='}
- {'code': 1007, 'msg': '用户名或者密码错误'}
+ {'code': 1000,
+  'msg': '登录成功',
+  'token': 'MTYyNDM3NDQ1Ny42MzIwOTcyOjFkZGE1Mjc3M2JjZjExMDBmY2NhYTJkMWFmNjA1MWUyODEzMGU5ZDk='}
2021-06-22 15:15:46,319 - [test_Login04.py -->line:65] - ERROR:测试编号:4,测试用例标题:大小写区分,执行失败,实际结果为:{'code': 1000, 'msg': '登录成功', 'token': 'MTYyNDM3NjE0Ni4yODkxODc3OmYyZDkyM2VlNzMzNTdlMGQzMDhkOThjZTZkMWMxNjYyZWQ3N2QzNWM='}
2021-06-22 15:15:46,319 - [test_Login04.py -->line:66] - ERROR: :: {'code': 1007, 'msg': '用户名或者密码错误'} != {'code': 1000,
 'msg': '登录成功',
 'token': 'MTYyNDM3NjE0Ni4yODkxODc3OmYyZDkyM2VlNzMzNTdlMGQzMDhkOThjZTZkMWMxNjYyZWQ3N2QzNWM='}
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1007, 'msg': '用户名或者密码错误'} != {'code': 1000, 'msg': '登录成功', 'token': 'MTYyNDM3NjE0N[64 chars]WM='}
- {'code': 1007, 'msg': '用户名或者密码错误'}
+ {'code': 1000,
+  'msg': '登录成功',
+  'token': 'MTYyNDM3NjE0Ni4yODkxODc3OmYyZDkyM2VlNzMzNTdlMGQzMDhkOThjZTZkMWMxNjYyZWQ3N2QzNWM='}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_token_login02\test_Login04.py", line 62, in test_login
    self.assertEqual(eval(case.expect), res)
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'code': 1007, 'msg': '用户名或者密码错误'} != {'code': 1000,
 'msg': '登录成功',
 'token': 'MTYyNDM3NjE0Ni4yODkxODc3OmYyZDkyM2VlNzMzNTdlMGQzMDhkOThjZTZkMWMxNjYyZWQ3N2QzNWM='}
2021-06-22 15:15:46,425 - [test_Login04.py -->line:65] - ERROR:测试编号:7,测试用例标题:大小写区分,执行失败,实际结果为:{'code': 1000, 'msg': '登录成功', 'token': 'MTYyNDM3NjE0Ni4zOTU5MDI2OmYxZmFmMjQ2NTg4OWJlZjE2YmMxNDE1NWJkMjEwMmNiNmU3M2UyY2Q='}
2021-06-22 15:15:46,425 - [test_Login04.py -->line:66] - ERROR: :: {'code': 1007, 'msg': '用户名或者密码错误'} != {'code': 1000,
 'msg': '登录成功',
 'token': 'MTYyNDM3NjE0Ni4zOTU5MDI2OmYxZmFmMjQ2NTg4OWJlZjE2YmMxNDE1NWJkMjEwMmNiNmU3M2UyY2Q='}
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1007, 'msg': '用户名或者密码错误'} != {'code': 1000, 'msg': '登录成功', 'token': 'MTYyNDM3NjE0N[64 chars]2Q='}
- {'code': 1007, 'msg': '用户名或者密码错误'}
+ {'code': 1000,
+  'msg': '登录成功',
+  'token': 'MTYyNDM3NjE0Ni4zOTU5MDI2OmYxZmFmMjQ2NTg4OWJlZjE2YmMxNDE1NWJkMjEwMmNiNmU3M2UyY2Q='}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_token_login02\test_Login04.py", line 62, in test_login
    self.assertEqual(eval(case.expect), res)
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'code': 1007, 'msg': '用户名或者密码错误'} != {'code': 1000,
 'msg': '登录成功',
 'token': 'MTYyNDM3NjE0Ni4zOTU5MDI2OmYxZmFmMjQ2NTg4OWJlZjE2YmMxNDE1NWJkMjEwMmNiNmU3M2UyY2Q='}
2021-06-23 10:33:23,376 - [test_Login04.py -->line:63] - ERROR:测试编号:4,测试用例标题:大小写区分,执行失败,实际结果为:{'code': 1000, 'msg': '登录成功', 'token': 'MTYyNDQ0NTYwMy4yOTgxMjg0OmYyNWE2NWRmYzVhNDE2MmM5MDQ5MjczYzEzMjhiOWQyYjE4NTAxYzY='}
2021-06-23 10:33:23,391 - [test_Login04.py -->line:64] - ERROR:{'code': 1007, 'msg': '用户名或者密码错误'} != {'code': 1000, 'msg': '登录成功', 'token': 'MTYyNDQ0NTYwM[64 chars]zY='}
- {'code': 1007, 'msg': '用户名或者密码错误'}
+ {'code': 1000,
+  'msg': '登录成功',
+  'token': 'MTYyNDQ0NTYwMy4yOTgxMjg0OmYyNWE2NWRmYzVhNDE2MmM5MDQ5MjczYzEzMjhiOWQyYjE4NTAxYzY='}
Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_token_login02\test_Login04.py", line 60, in test_login
    self.assertEqual(eval(case.expect), res)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1007, 'msg': '用户名或者密码错误'} != {'code': 1000, 'msg': '登录成功', 'token': 'MTYyNDQ0NTYwM[64 chars]zY='}
- {'code': 1007, 'msg': '用户名或者密码错误'}
+ {'code': 1000,
+  'msg': '登录成功',
+  'token': 'MTYyNDQ0NTYwMy4yOTgxMjg0OmYyNWE2NWRmYzVhNDE2MmM5MDQ5MjczYzEzMjhiOWQyYjE4NTAxYzY='}
2021-06-23 10:33:23,654 - [test_Login04.py -->line:63] - ERROR:测试编号:7,测试用例标题:大小写区分,执行失败,实际结果为:{'code': 1000, 'msg': '登录成功', 'token': 'MTYyNDQ0NTYwMy41NzkzMDg6MWM5NzFhZTNjZTRjNTJhYmEwMTQ4MzU3ZDc3NjA0MTcxYjI2MTY3OQ=='}
2021-06-23 10:33:23,654 - [test_Login04.py -->line:64] - ERROR:{'code': 1007, 'msg': '用户名或者密码错误'} != {'code': 1000, 'msg': '登录成功', 'token': 'MTYyNDQ0NTYwM[64 chars]Q=='}
- {'code': 1007, 'msg': '用户名或者密码错误'}
+ {'code': 1000,
+  'msg': '登录成功',
+  'token': 'MTYyNDQ0NTYwMy41NzkzMDg6MWM5NzFhZTNjZTRjNTJhYmEwMTQ4MzU3ZDc3NjA0MTcxYjI2MTY3OQ=='}
Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_token_login02\test_Login04.py", line 60, in test_login
    self.assertEqual(eval(case.expect), res)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1007, 'msg': '用户名或者密码错误'} != {'code': 1000, 'msg': '登录成功', 'token': 'MTYyNDQ0NTYwM[64 chars]Q=='}
- {'code': 1007, 'msg': '用户名或者密码错误'}
+ {'code': 1000,
+  'msg': '登录成功',
+  'token': 'MTYyNDQ0NTYwMy41NzkzMDg6MWM5NzFhZTNjZTRjNTJhYmEwMTQ4MzU3ZDc3NjA0MTcxYjI2MTY3OQ=='}
2021-06-23 10:49:31,402 - [test_Login04.py -->line:63] - ERROR:测试编号:4,测试用例标题:大小写区分,执行失败,实际结果为:{'code': 1000, 'msg': '登录成功', 'token': 'MTYyNDQ0NjU3MS4zMDkwOTc1OjI1ZDQwNDZlMzY4MTFjMTMwNmQyYTA2YmE4ZDJiMjQ4MDZjZTZmNjI='}
2021-06-23 10:49:31,402 - [test_Login04.py -->line:64] - ERROR:{'code': 1007, 'msg': '用户名或者密码错误'} != {'code': 1000, 'msg': '登录成功', 'token': 'MTYyNDQ0NjU3M[64 chars]jI='}
- {'code': 1007, 'msg': '用户名或者密码错误'}
+ {'code': 1000,
+  'msg': '登录成功',
+  'token': 'MTYyNDQ0NjU3MS4zMDkwOTc1OjI1ZDQwNDZlMzY4MTFjMTMwNmQyYTA2YmE4ZDJiMjQ4MDZjZTZmNjI='}
Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_token_login02\test_Login04.py", line 60, in test_login
    self.assertEqual(eval(case.expect), res)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1007, 'msg': '用户名或者密码错误'} != {'code': 1000, 'msg': '登录成功', 'token': 'MTYyNDQ0NjU3M[64 chars]jI='}
- {'code': 1007, 'msg': '用户名或者密码错误'}
+ {'code': 1000,
+  'msg': '登录成功',
+  'token': 'MTYyNDQ0NjU3MS4zMDkwOTc1OjI1ZDQwNDZlMzY4MTFjMTMwNmQyYTA2YmE4ZDJiMjQ4MDZjZTZmNjI='}
2021-06-23 10:49:31,637 - [test_Login04.py -->line:63] - ERROR:测试编号:7,测试用例标题:大小写区分,执行失败,实际结果为:{'code': 1000, 'msg': '登录成功', 'token': 'MTYyNDQ0NjU3MS41NzQ2NTY6YTk5ZmJmZjQzMWYxMWYzOTNiNjBhOGE3MDY1ODdiY2I3NGMzYTI2YQ=='}
2021-06-23 10:49:31,637 - [test_Login04.py -->line:64] - ERROR:{'code': 1007, 'msg': '用户名或者密码错误'} != {'code': 1000, 'msg': '登录成功', 'token': 'MTYyNDQ0NjU3M[64 chars]Q=='}
- {'code': 1007, 'msg': '用户名或者密码错误'}
+ {'code': 1000,
+  'msg': '登录成功',
+  'token': 'MTYyNDQ0NjU3MS41NzQ2NTY6YTk5ZmJmZjQzMWYxMWYzOTNiNjBhOGE3MDY1ODdiY2I3NGMzYTI2YQ=='}
Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_token_login02\test_Login04.py", line 60, in test_login
    self.assertEqual(eval(case.expect), res)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1007, 'msg': '用户名或者密码错误'} != {'code': 1000, 'msg': '登录成功', 'token': 'MTYyNDQ0NjU3M[64 chars]Q=='}
- {'code': 1007, 'msg': '用户名或者密码错误'}
+ {'code': 1000,
+  'msg': '登录成功',
+  'token': 'MTYyNDQ0NjU3MS41NzQ2NTY6YTk5ZmJmZjQzMWYxMWYzOTNiNjBhOGE3MDY1ODdiY2I3NGMzYTI2YQ=='}
2021-06-23 10:56:23,213 - [test_Login04.py -->line:63] - ERROR:测试编号:4,测试用例标题:大小写区分,执行失败,实际结果为:{'code': 1000, 'msg': '登录成功', 'token': 'MTYyNDQ0Njk4My4xMTk2OTM6MTA5N2Q1NzhhMDg5OGRjMDNiOGVkN2I5NjM4NWEyZjBjMTM0Zjk2NQ=='}
2021-06-23 10:56:23,213 - [test_Login04.py -->line:64] - ERROR:{'code': 1007, 'msg': '用户名或者密码错误'} != {'code': 1000, 'msg': '登录成功', 'token': 'MTYyNDQ0Njk4M[64 chars]Q=='}
- {'code': 1007, 'msg': '用户名或者密码错误'}
+ {'code': 1000,
+  'msg': '登录成功',
+  'token': 'MTYyNDQ0Njk4My4xMTk2OTM6MTA5N2Q1NzhhMDg5OGRjMDNiOGVkN2I5NjM4NWEyZjBjMTM0Zjk2NQ=='}
Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_token_login02\test_Login04.py", line 60, in test_login
    self.assertEqual(eval(case.expect), res)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1007, 'msg': '用户名或者密码错误'} != {'code': 1000, 'msg': '登录成功', 'token': 'MTYyNDQ0Njk4M[64 chars]Q=='}
- {'code': 1007, 'msg': '用户名或者密码错误'}
+ {'code': 1000,
+  'msg': '登录成功',
+  'token': 'MTYyNDQ0Njk4My4xMTk2OTM6MTA5N2Q1NzhhMDg5OGRjMDNiOGVkN2I5NjM4NWEyZjBjMTM0Zjk2NQ=='}
2021-06-23 10:56:23,480 - [test_Login04.py -->line:63] - ERROR:测试编号:7,测试用例标题:大小写区分,执行失败,实际结果为:{'code': 1000, 'msg': '登录成功', 'token': 'MTYyNDQ0Njk4My40MDIxNjAyOjU0YzdkODVlZGZmMzA2MDA3Yjg2ZGUxYzEyZGY2MjJiNWYwNDE1NWY='}
2021-06-23 10:56:23,480 - [test_Login04.py -->line:64] - ERROR:{'code': 1007, 'msg': '用户名或者密码错误'} != {'code': 1000, 'msg': '登录成功', 'token': 'MTYyNDQ0Njk4M[64 chars]WY='}
- {'code': 1007, 'msg': '用户名或者密码错误'}
+ {'code': 1000,
+  'msg': '登录成功',
+  'token': 'MTYyNDQ0Njk4My40MDIxNjAyOjU0YzdkODVlZGZmMzA2MDA3Yjg2ZGUxYzEyZGY2MjJiNWYwNDE1NWY='}
Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_token_login02\test_Login04.py", line 60, in test_login
    self.assertEqual(eval(case.expect), res)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1007, 'msg': '用户名或者密码错误'} != {'code': 1000, 'msg': '登录成功', 'token': 'MTYyNDQ0Njk4M[64 chars]WY='}
- {'code': 1007, 'msg': '用户名或者密码错误'}
+ {'code': 1000,
+  'msg': '登录成功',
+  'token': 'MTYyNDQ0Njk4My40MDIxNjAyOjU0YzdkODVlZGZmMzA2MDA3Yjg2ZGUxYzEyZGY2MjJiNWYwNDE1NWY='}
2021-06-23 10:58:16,698 - [test_Login04.py -->line:63] - ERROR:测试编号:4,测试用例标题:大小写区分,执行失败,实际结果为:{'code': 1000, 'msg': '登录成功', 'token': 'MTYyNDQ0NzA5Ni42MDQ1NjE2OjFhNDZhY2RhZmVmY2JkYTNmNzYzNmFiYWMzOWZiNzdhNzcyYzRhMWU='}
2021-06-23 10:58:16,698 - [test_Login04.py -->line:64] - ERROR:{'code': 1007, 'msg': '用户名或者密码错误'} != {'code': 1000, 'msg': '登录成功', 'token': 'MTYyNDQ0NzA5N[64 chars]WU='}
- {'code': 1007, 'msg': '用户名或者密码错误'}
+ {'code': 1000,
+  'msg': '登录成功',
+  'token': 'MTYyNDQ0NzA5Ni42MDQ1NjE2OjFhNDZhY2RhZmVmY2JkYTNmNzYzNmFiYWMzOWZiNzdhNzcyYzRhMWU='}
Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_token_login02\test_Login04.py", line 60, in test_login
    self.assertEqual(eval(case.expect), res)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1007, 'msg': '用户名或者密码错误'} != {'code': 1000, 'msg': '登录成功', 'token': 'MTYyNDQ0NzA5N[64 chars]WU='}
- {'code': 1007, 'msg': '用户名或者密码错误'}
+ {'code': 1000,
+  'msg': '登录成功',
+  'token': 'MTYyNDQ0NzA5Ni42MDQ1NjE2OjFhNDZhY2RhZmVmY2JkYTNmNzYzNmFiYWMzOWZiNzdhNzcyYzRhMWU='}
2021-06-23 10:58:16,970 - [test_Login04.py -->line:63] - ERROR:测试编号:7,测试用例标题:大小写区分,执行失败,实际结果为:{'code': 1000, 'msg': '登录成功', 'token': 'MTYyNDQ0NzA5Ni45MDc0MTM1OjRiZDRjODA1N2YwMDNmZTU2OWM5NWI1MmRkNGZjYTAxMWQzY2Y2OTY='}
2021-06-23 10:58:16,970 - [test_Login04.py -->line:64] - ERROR:{'code': 1007, 'msg': '用户名或者密码错误'} != {'code': 1000, 'msg': '登录成功', 'token': 'MTYyNDQ0NzA5N[64 chars]TY='}
- {'code': 1007, 'msg': '用户名或者密码错误'}
+ {'code': 1000,
+  'msg': '登录成功',
+  'token': 'MTYyNDQ0NzA5Ni45MDc0MTM1OjRiZDRjODA1N2YwMDNmZTU2OWM5NWI1MmRkNGZjYTAxMWQzY2Y2OTY='}
Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_token_login02\test_Login04.py", line 60, in test_login
    self.assertEqual(eval(case.expect), res)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1007, 'msg': '用户名或者密码错误'} != {'code': 1000, 'msg': '登录成功', 'token': 'MTYyNDQ0NzA5N[64 chars]TY='}
- {'code': 1007, 'msg': '用户名或者密码错误'}
+ {'code': 1000,
+  'msg': '登录成功',
+  'token': 'MTYyNDQ0NzA5Ni45MDc0MTM1OjRiZDRjODA1N2YwMDNmZTU2OWM5NWI1MmRkNGZjYTAxMWQzY2Y2OTY='}
2021-06-23 10:59:44,041 - [test_Login04.py -->line:63] - ERROR:测试编号:4,测试用例标题:大小写区分,执行失败,实际结果为:{'code': 1000, 'msg': '登录成功', 'token': 'MTYyNDQ0NzE4My45NjM3ODQ1OjkzY2UyZDEyNDBhOTllN2IzYjVkMzI3NTZhOTAzODU4ZjI5Mzc1Yjk='}
2021-06-23 10:59:44,041 - [test_Login04.py -->line:64] - ERROR:{'code': 1007, 'msg': '用户名或者密码错误'} != {'code': 1000, 'msg': '登录成功', 'token': 'MTYyNDQ0NzE4M[64 chars]jk='}
- {'code': 1007, 'msg': '用户名或者密码错误'}
+ {'code': 1000,
+  'msg': '登录成功',
+  'token': 'MTYyNDQ0NzE4My45NjM3ODQ1OjkzY2UyZDEyNDBhOTllN2IzYjVkMzI3NTZhOTAzODU4ZjI5Mzc1Yjk='}
Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_token_login02\test_Login04.py", line 60, in test_login
    self.assertEqual(eval(case.expect), res)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1007, 'msg': '用户名或者密码错误'} != {'code': 1000, 'msg': '登录成功', 'token': 'MTYyNDQ0NzE4M[64 chars]jk='}
- {'code': 1007, 'msg': '用户名或者密码错误'}
+ {'code': 1000,
+  'msg': '登录成功',
+  'token': 'MTYyNDQ0NzE4My45NjM3ODQ1OjkzY2UyZDEyNDBhOTllN2IzYjVkMzI3NTZhOTAzODU4ZjI5Mzc1Yjk='}
2021-06-23 10:59:44,323 - [test_Login04.py -->line:63] - ERROR:测试编号:7,测试用例标题:大小写区分,执行失败,实际结果为:{'code': 1000, 'msg': '登录成功', 'token': 'MTYyNDQ0NzE4NC4yNjA1ODQ6YWI5OTVmNTczMDhiYWZhYmI0OTM4NTlkZTEyYzY4NmE2NDcxOWQ4ZQ=='}
2021-06-23 10:59:44,323 - [test_Login04.py -->line:64] - ERROR:{'code': 1007, 'msg': '用户名或者密码错误'} != {'code': 1000, 'msg': '登录成功', 'token': 'MTYyNDQ0NzE4N[64 chars]Q=='}
- {'code': 1007, 'msg': '用户名或者密码错误'}
+ {'code': 1000,
+  'msg': '登录成功',
+  'token': 'MTYyNDQ0NzE4NC4yNjA1ODQ6YWI5OTVmNTczMDhiYWZhYmI0OTM4NTlkZTEyYzY4NmE2NDcxOWQ4ZQ=='}
Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_token_login02\test_Login04.py", line 60, in test_login
    self.assertEqual(eval(case.expect), res)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1007, 'msg': '用户名或者密码错误'} != {'code': 1000, 'msg': '登录成功', 'token': 'MTYyNDQ0NzE4N[64 chars]Q=='}
- {'code': 1007, 'msg': '用户名或者密码错误'}
+ {'code': 1000,
+  'msg': '登录成功',
+  'token': 'MTYyNDQ0NzE4NC4yNjA1ODQ6YWI5OTVmNTczMDhiYWZhYmI0OTM4NTlkZTEyYzY4NmE2NDcxOWQ4ZQ=='}
2021-06-23 10:59:45,439 - [test_regist07.py -->line:44] - ERROR:测试编号12,测试用例标题邮箱不能为空,执行失败,实际结果：{'code': 1006, 'msg': '邮箱不能为空'}
2021-06-23 10:59:45,439 - [test_regist07.py -->line:45] - ERROR:{'code': 10066, 'msg': '邮箱不能为空'} != {'code': 1006, 'msg': '邮箱不能为空'}
- {'code': 10066, 'msg': '邮箱不能为空'}
?              -

+ {'code': 1006, 'msg': '邮箱不能为空'}
Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_my_interface01\test_regist07.py", line 40, in test_register
    self.assertEqual(eval(case.expect), res_body)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 10066, 'msg': '邮箱不能为空'} != {'code': 1006, 'msg': '邮箱不能为空'}
- {'code': 10066, 'msg': '邮箱不能为空'}
?              -

+ {'code': 1006, 'msg': '邮箱不能为空'}
2021-06-23 16:30:54,692 - [test_business_regist03.py -->line:61] - ERROR:测试编号:3,测试用例标题:用户名有效边界值,执行失败,实际结果为:{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2021-06-23 16:30:54,693 - [test_business_regist03.py -->line:62] - ERROR: :: {'code': 1000, 'msg': '注册成功'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1000, 'msg': '注册成功'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
- {'code': 1000, 'msg': '注册成功'}
+ {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_regist03\test_business_regist03.py", line 53, in test_register
    self.assertEqual(eval(case.expect), res)  # 判定响应结果
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'code': 1000, 'msg': '注册成功'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2021-06-23 16:30:55,397 - [test_business_regist03.py -->line:61] - ERROR:测试编号:10,测试用例标题:密码有效边界值,执行失败,实际结果为:{'code': 1007, 'msg': '两次密码不一致'}
2021-06-23 16:30:55,397 - [test_business_regist03.py -->line:62] - ERROR: :: {'code': 1000, 'msg': '注册成功'} != {'code': 1007, 'msg': '两次密码不一致'}
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1000, 'msg': '注册成功'} != {'code': 1007, 'msg': '两次密码不一致'}
- {'code': 1000, 'msg': '注册成功'}
?             ^          ^^^^

+ {'code': 1007, 'msg': '两次密码不一致'}
?             ^          ^^^^^^^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_regist03\test_business_regist03.py", line 53, in test_register
    self.assertEqual(eval(case.expect), res)  # 判定响应结果
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'code': 1000, 'msg': '注册成功'} != {'code': 1007, 'msg': '两次密码不一致'}
2021-06-23 16:30:55,961 - [test_business_regist03.py -->line:61] - ERROR:测试编号:17,测试用例标题:手机号码不支持号段,执行失败,实际结果为:{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2021-06-23 16:30:55,961 - [test_business_regist03.py -->line:62] - ERROR: :: {'code': 1008, 'msg': '手机号格式错误'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1008, 'msg': '手机号格式错误'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
- {'code': 1008, 'msg': '手机号格式错误'}
+ {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_regist03\test_business_regist03.py", line 53, in test_register
    self.assertEqual(eval(case.expect), res)  # 判定响应结果
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'code': 1008, 'msg': '手机号格式错误'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2021-06-23 16:30:56,284 - [test_business_regist03.py -->line:61] - ERROR:测试编号:21,测试用例标题:性别为空,执行失败,实际结果为:{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2021-06-23 16:30:56,284 - [test_business_regist03.py -->line:62] - ERROR: :: {'code': 1000, 'msg': '注册成功'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1000, 'msg': '注册成功'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
- {'code': 1000, 'msg': '注册成功'}
+ {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_regist03\test_business_regist03.py", line 53, in test_register
    self.assertEqual(eval(case.expect), res)  # 判定响应结果
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'code': 1000, 'msg': '注册成功'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2021-06-23 16:30:56,534 - [test_business_regist03.py -->line:61] - ERROR:测试编号:24,测试用例标题:出生日期为空,执行失败,实际结果为:{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2021-06-23 16:30:56,534 - [test_business_regist03.py -->line:62] - ERROR: :: {'code': 1000, 'msg': '注册成功'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1000, 'msg': '注册成功'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
- {'code': 1000, 'msg': '注册成功'}
+ {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_regist03\test_business_regist03.py", line 53, in test_register
    self.assertEqual(eval(case.expect), res)  # 判定响应结果
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'code': 1000, 'msg': '注册成功'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2021-06-23 16:30:56,712 - [test_business_regist03.py -->line:61] - ERROR:测试编号:26,测试用例标题:出生日期不存在的日期,执行失败,实际结果为:{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2021-06-23 16:30:56,712 - [test_business_regist03.py -->line:62] - ERROR: :: {'code': 1010, 'msg': '生日格式错误'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1010, 'msg': '生日格式错误'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
- {'code': 1010, 'msg': '生日格式错误'}
+ {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_regist03\test_business_regist03.py", line 53, in test_register
    self.assertEqual(eval(case.expect), res)  # 判定响应结果
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'code': 1010, 'msg': '生日格式错误'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2021-06-23 16:30:56,798 - [test_business_regist03.py -->line:61] - ERROR:测试编号:27,测试用例标题:出生日期超过当天,执行失败,实际结果为:{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2021-06-23 16:30:56,798 - [test_business_regist03.py -->line:62] - ERROR: :: {'code': 1010, 'msg': '生日格式错误'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1010, 'msg': '生日格式错误'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
- {'code': 1010, 'msg': '生日格式错误'}
+ {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_regist03\test_business_regist03.py", line 53, in test_register
    self.assertEqual(eval(case.expect), res)  # 判定响应结果
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'code': 1010, 'msg': '生日格式错误'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2021-06-23 16:30:56,883 - [test_business_regist03.py -->line:61] - ERROR:测试编号:28,测试用例标题:出生日期超出合理时间期限,执行失败,实际结果为:{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2021-06-23 16:30:56,883 - [test_business_regist03.py -->line:62] - ERROR: :: {'code': 1010, 'msg': '生日格式错误'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1010, 'msg': '生日格式错误'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
- {'code': 1010, 'msg': '生日格式错误'}
+ {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_regist03\test_business_regist03.py", line 53, in test_register
    self.assertEqual(eval(case.expect), res)  # 判定响应结果
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'code': 1010, 'msg': '生日格式错误'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2021-06-23 16:30:56,966 - [test_business_regist03.py -->line:61] - ERROR:测试编号:29,测试用例标题:qq号码为空,执行失败,实际结果为:{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2021-06-23 16:30:56,966 - [test_business_regist03.py -->line:62] - ERROR: :: {'code': 1000, 'msg': '注册成功'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1000, 'msg': '注册成功'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
- {'code': 1000, 'msg': '注册成功'}
+ {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_regist03\test_business_regist03.py", line 53, in test_register
    self.assertEqual(eval(case.expect), res)  # 判定响应结果
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'code': 1000, 'msg': '注册成功'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2021-06-23 16:30:57,051 - [test_business_regist03.py -->line:61] - ERROR:测试编号:30,测试用例标题:qq号码有效边界值,执行失败,实际结果为:{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2021-06-23 16:30:57,052 - [test_business_regist03.py -->line:62] - ERROR: :: {'code': 1000, 'msg': '注册成功'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1000, 'msg': '注册成功'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
- {'code': 1000, 'msg': '注册成功'}
+ {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_regist03\test_business_regist03.py", line 53, in test_register
    self.assertEqual(eval(case.expect), res)  # 判定响应结果
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'code': 1000, 'msg': '注册成功'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2021-06-23 16:30:57,319 - [test_business_regist03.py -->line:61] - ERROR:测试编号:33,测试用例标题:email为空,执行失败,实际结果为:{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2021-06-23 16:30:57,320 - [test_business_regist03.py -->line:62] - ERROR: :: {'code': 1000, 'msg': '注册成功'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1000, 'msg': '注册成功'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
- {'code': 1000, 'msg': '注册成功'}
+ {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_regist03\test_business_regist03.py", line 53, in test_register
    self.assertEqual(eval(case.expect), res)  # 判定响应结果
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'code': 1000, 'msg': '注册成功'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2021-06-23 16:31:30,743 - [test_business_regist03.py -->line:61] - ERROR:测试编号:3,测试用例标题:用户名有效边界值,执行失败,实际结果为:{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2021-06-23 16:31:30,743 - [test_business_regist03.py -->line:62] - ERROR: :: {'code': 1000, 'msg': '注册成功'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1000, 'msg': '注册成功'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
- {'code': 1000, 'msg': '注册成功'}
+ {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_regist03\test_business_regist03.py", line 53, in test_register
    self.assertEqual(eval(case.expect), res)  # 判定响应结果
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'code': 1000, 'msg': '注册成功'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2021-06-23 16:31:31,435 - [test_business_regist03.py -->line:61] - ERROR:测试编号:10,测试用例标题:密码有效边界值,执行失败,实际结果为:{'code': 1007, 'msg': '两次密码不一致'}
2021-06-23 16:31:31,435 - [test_business_regist03.py -->line:62] - ERROR: :: {'code': 1000, 'msg': '注册成功'} != {'code': 1007, 'msg': '两次密码不一致'}
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1000, 'msg': '注册成功'} != {'code': 1007, 'msg': '两次密码不一致'}
- {'code': 1000, 'msg': '注册成功'}
?             ^          ^^^^

+ {'code': 1007, 'msg': '两次密码不一致'}
?             ^          ^^^^^^^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_regist03\test_business_regist03.py", line 53, in test_register
    self.assertEqual(eval(case.expect), res)  # 判定响应结果
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'code': 1000, 'msg': '注册成功'} != {'code': 1007, 'msg': '两次密码不一致'}
2021-06-23 16:31:31,985 - [test_business_regist03.py -->line:61] - ERROR:测试编号:17,测试用例标题:手机号码不支持号段,执行失败,实际结果为:{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2021-06-23 16:31:31,985 - [test_business_regist03.py -->line:62] - ERROR: :: {'code': 1008, 'msg': '手机号格式错误'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1008, 'msg': '手机号格式错误'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
- {'code': 1008, 'msg': '手机号格式错误'}
+ {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_regist03\test_business_regist03.py", line 53, in test_register
    self.assertEqual(eval(case.expect), res)  # 判定响应结果
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'code': 1008, 'msg': '手机号格式错误'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2021-06-23 16:33:53,730 - [test_business_regist03.py -->line:61] - ERROR:测试编号:8,测试用例标题:用户名已注册,执行失败,实际结果为:{'code': 1000, 'msg': '注册成功'}
2021-06-23 16:33:53,731 - [test_business_regist03.py -->line:62] - ERROR: :: {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'} != {'code': 1000, 'msg': '注册成功'}
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'} != {'code': 1000, 'msg': '注册成功'}
- {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
+ {'code': 1000, 'msg': '注册成功'}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_regist03\test_business_regist03.py", line 53, in test_register
    self.assertEqual(eval(case.expect), res)  # 判定响应结果
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'} != {'code': 1000, 'msg': '注册成功'}
2021-06-23 16:33:53,888 - [test_business_regist03.py -->line:61] - ERROR:测试编号:10,测试用例标题:密码有效边界值,执行失败,实际结果为:{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2021-06-23 16:33:53,888 - [test_business_regist03.py -->line:62] - ERROR: :: {'code': 1000, 'msg': '注册成功'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1000, 'msg': '注册成功'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
- {'code': 1000, 'msg': '注册成功'}
+ {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_regist03\test_business_regist03.py", line 53, in test_register
    self.assertEqual(eval(case.expect), res)  # 判定响应结果
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'code': 1000, 'msg': '注册成功'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2021-06-23 16:33:54,496 - [test_business_regist03.py -->line:61] - ERROR:测试编号:17,测试用例标题:手机号码不支持号段,执行失败,实际结果为:{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2021-06-23 16:33:54,497 - [test_business_regist03.py -->line:62] - ERROR: :: {'code': 1008, 'msg': '手机号格式错误'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1008, 'msg': '手机号格式错误'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
- {'code': 1008, 'msg': '手机号格式错误'}
+ {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_regist03\test_business_regist03.py", line 53, in test_register
    self.assertEqual(eval(case.expect), res)  # 判定响应结果
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'code': 1008, 'msg': '手机号格式错误'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2021-06-23 16:40:29,347 - [test_business_regist03.py -->line:64] - ERROR:测试编号:17,测试用例标题:手机号码不支持号段,执行失败,实际结果为:{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2021-06-23 16:40:29,347 - [test_business_regist03.py -->line:65] - ERROR: :: {'code': 1008, 'msg': '手机号格式错误'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1008, 'msg': '手机号格式错误'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
- {'code': 1008, 'msg': '手机号格式错误'}
+ {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_regist03\test_business_regist03.py", line 56, in test_register
    self.assertEqual(eval(case.expect), res)  # 判定响应结果
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'code': 1008, 'msg': '手机号格式错误'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2021-06-23 16:40:35,378 - [test_business_regist03.py -->line:64] - ERROR:测试编号:17,测试用例标题:手机号码不支持号段,执行失败,实际结果为:{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2021-06-23 16:40:35,379 - [test_business_regist03.py -->line:65] - ERROR: :: {'code': 1008, 'msg': '手机号格式错误'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1008, 'msg': '手机号格式错误'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
- {'code': 1008, 'msg': '手机号格式错误'}
+ {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_regist03\test_business_regist03.py", line 56, in test_register
    self.assertEqual(eval(case.expect), res)  # 判定响应结果
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'code': 1008, 'msg': '手机号格式错误'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2021-06-23 16:40:40,222 - [test_business_regist03.py -->line:64] - ERROR:测试编号:17,测试用例标题:手机号码不支持号段,执行失败,实际结果为:{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2021-06-23 16:40:40,223 - [test_business_regist03.py -->line:65] - ERROR: :: {'code': 1008, 'msg': '手机号格式错误'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1008, 'msg': '手机号格式错误'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
- {'code': 1008, 'msg': '手机号格式错误'}
+ {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_regist03\test_business_regist03.py", line 56, in test_register
    self.assertEqual(eval(case.expect), res)  # 判定响应结果
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'code': 1008, 'msg': '手机号格式错误'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2021-06-23 16:51:02,247 - [test_business_regist04.py -->line:59] - ERROR:测试编号:17,测试用例标题:手机号码不支持号段,执行失败,实际结果为:{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2021-06-23 16:51:02,247 - [test_business_regist04.py -->line:60] - ERROR:{'code': 1008, 'msg': '手机号格式错误'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
- {'code': 1008, 'msg': '手机号格式错误'}
+ {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_regist03\test_business_regist04.py", line 51, in test_register
    self.assertEqual(eval(case.expect), res)  # 判定响应结果
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1008, 'msg': '手机号格式错误'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
- {'code': 1008, 'msg': '手机号格式错误'}
+ {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2021-06-23 16:51:04,838 - [test_regist07.py -->line:44] - ERROR:测试编号12,测试用例标题邮箱不能为空,执行失败,实际结果：{'code': 1006, 'msg': '邮箱不能为空'}
2021-06-23 16:51:04,838 - [test_regist07.py -->line:45] - ERROR:{'code': 10066, 'msg': '邮箱不能为空'} != {'code': 1006, 'msg': '邮箱不能为空'}
- {'code': 10066, 'msg': '邮箱不能为空'}
?              -

+ {'code': 1006, 'msg': '邮箱不能为空'}
Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_my_interface01\test_regist07.py", line 40, in test_register
    self.assertEqual(eval(case.expect), res_body)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 10066, 'msg': '邮箱不能为空'} != {'code': 1006, 'msg': '邮箱不能为空'}
- {'code': 10066, 'msg': '邮箱不能为空'}
?              -

+ {'code': 1006, 'msg': '邮箱不能为空'}
2021-06-23 16:52:18,571 - [test_business_regist04.py -->line:59] - ERROR:测试编号:17,测试用例标题:手机号码不支持号段,执行失败,实际结果为:{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2021-06-23 16:52:18,571 - [test_business_regist04.py -->line:60] - ERROR:{'code': 1008, 'msg': '手机号格式错误'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
- {'code': 1008, 'msg': '手机号格式错误'}
+ {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_regist03\test_business_regist04.py", line 51, in test_register
    self.assertEqual(eval(case.expect), res)  # 判定响应结果
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1008, 'msg': '手机号格式错误'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
- {'code': 1008, 'msg': '手机号格式错误'}
+ {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2021-06-23 16:52:21,120 - [test_regist07.py -->line:44] - ERROR:测试编号12,测试用例标题邮箱不能为空,执行失败,实际结果：{'code': 1006, 'msg': '邮箱不能为空'}
2021-06-23 16:52:21,120 - [test_regist07.py -->line:45] - ERROR:{'code': 10066, 'msg': '邮箱不能为空'} != {'code': 1006, 'msg': '邮箱不能为空'}
- {'code': 10066, 'msg': '邮箱不能为空'}
?              -

+ {'code': 1006, 'msg': '邮箱不能为空'}
Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_my_interface01\test_regist07.py", line 40, in test_register
    self.assertEqual(eval(case.expect), res_body)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 10066, 'msg': '邮箱不能为空'} != {'code': 1006, 'msg': '邮箱不能为空'}
- {'code': 10066, 'msg': '邮箱不能为空'}
?              -

+ {'code': 1006, 'msg': '邮箱不能为空'}
2021-06-24 17:43:31,909 - [test_business_token_goodsInfo03.py -->line:74] - ERROR:测试编号:10,测试用例标题:token过期的场景,执行失败,实际结果为:{'code': 1008, 'msg': '没有符合条件的数据'}
2021-06-24 17:43:31,912 - [test_business_token_goodsInfo03.py -->line:75] - ERROR: :: {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'} != {'code': 1008, 'msg': '没有符合条件的数据'}
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'} != {'code': 1008, 'msg': '没有符合条件的数据'}
- {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'}
+ {'code': 1008, 'msg': '没有符合条件的数据'}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_token_goodsInfo04\test_business_token_goodsInfo03.py", line 71, in test_token_goods_info
    self.assertEqual(eval(case.expect), res)
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'} != {'code': 1008, 'msg': '没有符合条件的数据'}
2021-06-24 17:44:28,650 - [test_business_token_goodsInfo03.py -->line:74] - ERROR:测试编号:10,测试用例标题:token过期的场景,执行失败,实际结果为:{'code': 1000, 'msg': '查询成功', 'goods_tiems': [{'goodsName': 'iphone4S', 'shopPrice': 3000.0, 'promotePrice': 0.0, 'num': 99999}]}
2021-06-24 17:44:28,650 - [test_business_token_goodsInfo03.py -->line:75] - ERROR: :: {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'} != {'code': 1000,
 'goods_tiems': [{'goodsName': 'iphone4S',
                  'num': 99999,
                  'promotePrice': 0.0,
                  'shopPrice': 3000.0}],
 'msg': '查询成功'}
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'} != {'code': 1000, 'msg': '查询成功', 'goods_tiems': [{'goods[71 chars]99}]}
- {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'}
+ {'code': 1000,
+  'goods_tiems': [{'goodsName': 'iphone4S',
+                   'num': 99999,
+                   'promotePrice': 0.0,
+                   'shopPrice': 3000.0}],
+  'msg': '查询成功'}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_token_goodsInfo04\test_business_token_goodsInfo03.py", line 71, in test_token_goods_info
    self.assertEqual(eval(case.expect), res)
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'} != {'code': 1000,
 'goods_tiems': [{'goodsName': 'iphone4S',
                  'num': 99999,
                  'promotePrice': 0.0,
                  'shopPrice': 3000.0}],
 'msg': '查询成功'}
2021-06-26 16:13:39,385 - [test_business_goods_inputs01.py -->line:34] - ERROR:测试编号:1,测试用例标题:正常流程,执行失败,实际结果为:{'code': 9999, 'msg': 'token key值不存在'}
2021-06-26 16:13:39,385 - [test_business_goods_inputs01.py -->line:35] - ERROR: :: {'desc': 'asdfghjkla',
 'goodsName': 'iphone12',
 'goodsTypeId': '10003',
 'number': '1000',
 'shopPrice': '1999.99',
 'token': '#token#'} != {'code': 9999, 'msg': 'token key值不存在'}
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'token': '#token#', 'goodsName': 'iphone12[85 chars].99'} != {'code': 9999, 'msg': 'token key值不存在'}
+ {'code': 9999, 'msg': 'token key值不存在'}
- {'desc': 'asdfghjkla',
-  'goodsName': 'iphone12',
-  'goodsTypeId': '10003',
-  'number': '1000',
-  'shopPrice': '1999.99',
-  'token': '#token#'}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_token_goods_input06\test_business_goods_inputs01.py", line 31, in test_goods_input
    self.assertEqual(eval(case.case_data), res)
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'desc': 'asdfghjkla',
 'goodsName': 'iphone12',
 'goodsTypeId': '10003',
 'number': '1000',
 'shopPrice': '1999.99',
 'token': '#token#'} != {'code': 9999, 'msg': 'token key值不存在'}
2021-06-26 16:15:05,663 - [test_business_goods_inputs01.py -->line:40] - ERROR:测试编号:1,测试用例标题:正常流程,执行失败,实际结果为:{'code': 9999, 'msg': 'token key值不存在'}
2021-06-26 16:15:05,663 - [test_business_goods_inputs01.py -->line:41] - ERROR: :: {'desc': 'asdfghjkla',
 'goodsName': 'iphone12',
 'goodsTypeId': '10003',
 'number': '1000',
 'shopPrice': '1999.99',
 'token': 'MTYyNDcyNTMwNS41ODk5NzY4OjcyMDA3NmYxNGNlNTFiNzBjNjA3NThiOGIzMmExODA2YWY4Y2IyNzQ='} != {'code': 9999, 'msg': 'token key值不存在'}
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'token': 'MTYyNDcyNTMwNS41ODk5NzY4OjcyMDA3[158 chars].99'} != {'code': 9999, 'msg': 'token key值不存在'}
+ {'code': 9999, 'msg': 'token key值不存在'}
- {'desc': 'asdfghjkla',
-  'goodsName': 'iphone12',
-  'goodsTypeId': '10003',
-  'number': '1000',
-  'shopPrice': '1999.99',
-  'token': 'MTYyNDcyNTMwNS41ODk5NzY4OjcyMDA3NmYxNGNlNTFiNzBjNjA3NThiOGIzMmExODA2YWY4Y2IyNzQ='}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_token_goods_input06\test_business_goods_inputs01.py", line 37, in test_goods_input
    self.assertEqual(eval(case.case_data), res)
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'desc': 'asdfghjkla',
 'goodsName': 'iphone12',
 'goodsTypeId': '10003',
 'number': '1000',
 'shopPrice': '1999.99',
 'token': 'MTYyNDcyNTMwNS41ODk5NzY4OjcyMDA3NmYxNGNlNTFiNzBjNjA3NThiOGIzMmExODA2YWY4Y2IyNzQ='} != {'code': 9999, 'msg': 'token key值不存在'}
2021-06-26 16:16:46,037 - [test_business_goods_inputs01.py -->line:41] - ERROR:测试编号:1,测试用例标题:正常流程,执行失败,实际结果为:{'code': 9999, 'msg': 'token key值不存在'}
2021-06-26 16:16:46,037 - [test_business_goods_inputs01.py -->line:42] - ERROR: :: {'desc': 'asdfghjkla',
 'goodsName': 'iphone12',
 'goodsTypeId': '10003',
 'number': '1000',
 'shopPrice': '1999.99',
 'token': 'MTYyNDcyNTQwNS45NjU1MDU2OjZmY2RmYjhiNzU2MWVjZjc5YzQyNWQ2NTA1YTRjMzBmZTZiOGE2ZmE='} != {'code': 9999, 'msg': 'token key值不存在'}
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'token': 'MTYyNDcyNTQwNS45NjU1MDU2OjZmY2Rm[158 chars].99'} != {'code': 9999, 'msg': 'token key值不存在'}
+ {'code': 9999, 'msg': 'token key值不存在'}
- {'desc': 'asdfghjkla',
-  'goodsName': 'iphone12',
-  'goodsTypeId': '10003',
-  'number': '1000',
-  'shopPrice': '1999.99',
-  'token': 'MTYyNDcyNTQwNS45NjU1MDU2OjZmY2RmYjhiNzU2MWVjZjc5YzQyNWQ2NTA1YTRjMzBmZTZiOGE2ZmE='}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_token_goods_input06\test_business_goods_inputs01.py", line 38, in test_goods_input
    self.assertEqual(eval(case.case_data), res)
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'desc': 'asdfghjkla',
 'goodsName': 'iphone12',
 'goodsTypeId': '10003',
 'number': '1000',
 'shopPrice': '1999.99',
 'token': 'MTYyNDcyNTQwNS45NjU1MDU2OjZmY2RmYjhiNzU2MWVjZjc5YzQyNWQ2NTA1YTRjMzBmZTZiOGE2ZmE='} != {'code': 9999, 'msg': 'token key值不存在'}
2021-06-26 16:18:09,804 - [test_business_goods_inputs01.py -->line:41] - ERROR:测试编号:1,测试用例标题:正常流程,执行失败,实际结果为:{'code': 1012, 'msg': '商品分类不存在'}
2021-06-26 16:18:09,804 - [test_business_goods_inputs01.py -->line:42] - ERROR: :: {'desc': 'asdfghjkla',
 'goodsName': 'iphone12',
 'goodsTypeId': '10003',
 'number': '1000',
 'shopPrice': '1999.99',
 'token': 'MTYyNDcyNTQ4OS42MzA3NDI4OjQ0OTI4MWU3NjQyZmJjMjNmOWNjMWRhM2Y0OWE3OTkwYjllMDdkMTI='} != {'code': 1012, 'msg': '商品分类不存在'}
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'token': 'MTYyNDcyNTQ4OS42MzA3NDI4OjQ0OTI4[158 chars].99'} != {'code': 1012, 'msg': '商品分类不存在'}
+ {'code': 1012, 'msg': '商品分类不存在'}
- {'desc': 'asdfghjkla',
-  'goodsName': 'iphone12',
-  'goodsTypeId': '10003',
-  'number': '1000',
-  'shopPrice': '1999.99',
-  'token': 'MTYyNDcyNTQ4OS42MzA3NDI4OjQ0OTI4MWU3NjQyZmJjMjNmOWNjMWRhM2Y0OWE3OTkwYjllMDdkMTI='}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_token_goods_input06\test_business_goods_inputs01.py", line 38, in test_goods_input
    self.assertEqual(eval(case.case_data), res)
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'desc': 'asdfghjkla',
 'goodsName': 'iphone12',
 'goodsTypeId': '10003',
 'number': '1000',
 'shopPrice': '1999.99',
 'token': 'MTYyNDcyNTQ4OS42MzA3NDI4OjQ0OTI4MWU3NjQyZmJjMjNmOWNjMWRhM2Y0OWE3OTkwYjllMDdkMTI='} != {'code': 1012, 'msg': '商品分类不存在'}
2021-06-26 16:19:42,163 - [test_business_goods_inputs01.py -->line:41] - ERROR:测试编号:1,测试用例标题:正常流程,执行失败,实际结果为:{'code': 1013, 'msg': '产品名称不能重复'}
2021-06-26 16:19:42,163 - [test_business_goods_inputs01.py -->line:42] - ERROR: :: {'desc': 'asdfghjkla',
 'goodsName': 'iphone12',
 'goodsTypeId': '10003',
 'number': '1000',
 'shopPrice': '1999.99',
 'token': 'MTYyNDcyNTU4Mi4wODc1Njk6YTdiZGY5ZTM3NTQyZmRiNjE5M2VlNDgzYTIyZWFlYzM0NmY5Zjg1Ng=='} != {'code': 1013, 'msg': '产品名称不能重复'}
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'token': 'MTYyNDcyNTU4Mi4wODc1Njk6YTdiZGY5[158 chars].99'} != {'code': 1013, 'msg': '产品名称不能重复'}
+ {'code': 1013, 'msg': '产品名称不能重复'}
- {'desc': 'asdfghjkla',
-  'goodsName': 'iphone12',
-  'goodsTypeId': '10003',
-  'number': '1000',
-  'shopPrice': '1999.99',
-  'token': 'MTYyNDcyNTU4Mi4wODc1Njk6YTdiZGY5ZTM3NTQyZmRiNjE5M2VlNDgzYTIyZWFlYzM0NmY5Zjg1Ng=='}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_token_goods_input06\test_business_goods_inputs01.py", line 38, in test_goods_input
    self.assertEqual(eval(case.case_data), res)
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'desc': 'asdfghjkla',
 'goodsName': 'iphone12',
 'goodsTypeId': '10003',
 'number': '1000',
 'shopPrice': '1999.99',
 'token': 'MTYyNDcyNTU4Mi4wODc1Njk6YTdiZGY5ZTM3NTQyZmRiNjE5M2VlNDgzYTIyZWFlYzM0NmY5Zjg1Ng=='} != {'code': 1013, 'msg': '产品名称不能重复'}
2021-06-26 16:20:02,361 - [test_business_goods_inputs01.py -->line:41] - ERROR:测试编号:1,测试用例标题:正常流程,执行失败,实际结果为:{'code': 1000, 'msg': '商品录入成功'}
2021-06-26 16:20:02,362 - [test_business_goods_inputs01.py -->line:42] - ERROR: :: {'desc': 'asdfghjkla',
 'goodsName': 'iphone13',
 'goodsTypeId': '10003',
 'number': '1000',
 'shopPrice': '1999.99',
 'token': 'MTYyNDcyNTYwMi4yODUwNTY0OjQzZjMzYjI1OWVhMWYwNGUzYWNlYjhlN2Q4YjBkNzAzMjFmNWMzZjE='} != {'code': 1000, 'msg': '商品录入成功'}
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'token': 'MTYyNDcyNTYwMi4yODUwNTY0OjQzZjMz[158 chars].99'} != {'code': 1000, 'msg': '商品录入成功'}
+ {'code': 1000, 'msg': '商品录入成功'}
- {'desc': 'asdfghjkla',
-  'goodsName': 'iphone13',
-  'goodsTypeId': '10003',
-  'number': '1000',
-  'shopPrice': '1999.99',
-  'token': 'MTYyNDcyNTYwMi4yODUwNTY0OjQzZjMzYjI1OWVhMWYwNGUzYWNlYjhlN2Q4YjBkNzAzMjFmNWMzZjE='}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_token_goods_input06\test_business_goods_inputs01.py", line 38, in test_goods_input
    self.assertEqual(eval(case.case_data), res)
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'desc': 'asdfghjkla',
 'goodsName': 'iphone13',
 'goodsTypeId': '10003',
 'number': '1000',
 'shopPrice': '1999.99',
 'token': 'MTYyNDcyNTYwMi4yODUwNTY0OjQzZjMzYjI1OWVhMWYwNGUzYWNlYjhlN2Q4YjBkNzAzMjFmNWMzZjE='} != {'code': 1000, 'msg': '商品录入成功'}
2021-06-26 16:31:15,609 - [Ftest_business_goods_inputs01.py -->line:51] - ERROR:测试编号:1,测试用例标题:正常流程,执行失败,实际结果为:{'code': 1013, 'msg': '产品名称不能重复'}
2021-06-26 16:31:15,609 - [Ftest_business_goods_inputs01.py -->line:52] - ERROR: :: {'code': 1000, 'msg': '商品录入成功'} != {'code': 1013, 'msg': '产品名称不能重复'}
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1000, 'msg': '商品录入成功'} != {'code': 1013, 'msg': '产品名称不能重复'}
- {'code': 1000, 'msg': '商品录入成功'}
?            ^^          ^ ^^^^

+ {'code': 1013, 'msg': '产品名称不能重复'}
?            ^^          ^ ^^^^^^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_token_goods_input06\Ftest_business_goods_inputs01.py", line 43, in test_goods_input
    self.assertEqual(eval(case.expect), res)
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'code': 1000, 'msg': '商品录入成功'} != {'code': 1013, 'msg': '产品名称不能重复'}
2021-06-26 16:32:09,220 - [Ftest_business_goods_inputs01.py -->line:51] - ERROR:测试编号:1,测试用例标题:正常流程,执行失败,实际结果为:{'code': 1013, 'msg': '产品名称不能重复'}
2021-06-26 16:32:09,220 - [Ftest_business_goods_inputs01.py -->line:52] - ERROR: :: {'code': 1000, 'msg': '商品录入成功'} != {'code': 1013, 'msg': '产品名称不能重复'}
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1000, 'msg': '商品录入成功'} != {'code': 1013, 'msg': '产品名称不能重复'}
- {'code': 1000, 'msg': '商品录入成功'}
?            ^^          ^ ^^^^

+ {'code': 1013, 'msg': '产品名称不能重复'}
?            ^^          ^ ^^^^^^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_token_goods_input06\Ftest_business_goods_inputs01.py", line 43, in test_goods_input
    self.assertEqual(eval(case.expect), res)
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'code': 1000, 'msg': '商品录入成功'} != {'code': 1013, 'msg': '产品名称不能重复'}
2021-06-26 16:32:30,000 - [Ftest_business_goods_inputs01.py -->line:51] - ERROR:测试编号:1,测试用例标题:正常流程,执行失败,实际结果为:{'code': 1013, 'msg': '产品名称不能重复'}
2021-06-26 16:32:30,001 - [Ftest_business_goods_inputs01.py -->line:52] - ERROR: :: {'code': 1000, 'msg': '商品录入成功'} != {'code': 1013, 'msg': '产品名称不能重复'}
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1000, 'msg': '商品录入成功'} != {'code': 1013, 'msg': '产品名称不能重复'}
- {'code': 1000, 'msg': '商品录入成功'}
?            ^^          ^ ^^^^

+ {'code': 1013, 'msg': '产品名称不能重复'}
?            ^^          ^ ^^^^^^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_token_goods_input06\Ftest_business_goods_inputs01.py", line 43, in test_goods_input
    self.assertEqual(eval(case.expect), res)
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'code': 1000, 'msg': '商品录入成功'} != {'code': 1013, 'msg': '产品名称不能重复'}
2021-06-26 16:43:47,867 - [test_business_regist04.py -->line:59] - ERROR:测试编号:17,测试用例标题:手机号码不支持号段,执行失败,实际结果为:{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2021-06-26 16:43:47,867 - [test_business_regist04.py -->line:60] - ERROR:{'code': 1008, 'msg': '手机号格式错误'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
- {'code': 1008, 'msg': '手机号格式错误'}
+ {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_regist03\test_business_regist04.py", line 51, in test_register
    self.assertEqual(eval(case.expect), res)  # 判定响应结果
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1008, 'msg': '手机号格式错误'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
- {'code': 1008, 'msg': '手机号格式错误'}
+ {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2021-06-26 16:44:40,969 - [test_business_regist04.py -->line:59] - ERROR:测试编号:17,测试用例标题:手机号码不支持号段,执行失败,实际结果为:{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2021-06-26 16:44:40,969 - [test_business_regist04.py -->line:60] - ERROR:{'code': 1008, 'msg': '手机号格式错误'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
- {'code': 1008, 'msg': '手机号格式错误'}
+ {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_regist03\test_business_regist04.py", line 51, in test_register
    self.assertEqual(eval(case.expect), res)  # 判定响应结果
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1008, 'msg': '手机号格式错误'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
- {'code': 1008, 'msg': '手机号格式错误'}
+ {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2021-06-26 16:49:46,570 - [test_business_goods_inputs03.py -->line:58] - ERROR:测试编号:6,测试用例标题:商品名已存在,执行失败,实际结果为:{'code': 1000, 'msg': '商品录入成功'}
2021-06-26 16:49:46,570 - [test_business_goods_inputs03.py -->line:59] - ERROR: :: {'code': 1013, 'msg': '产品名称不能重复'} != {'code': 1000, 'msg': '商品录入成功'}
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1013, 'msg': '产品名称不能重复'} != {'code': 1000, 'msg': '商品录入成功'}
- {'code': 1013, 'msg': '产品名称不能重复'}
?            ^^          ^ ^^^^^^

+ {'code': 1000, 'msg': '商品录入成功'}
?            ^^          ^ ^^^^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_token_goods_input06\test_business_goods_inputs03.py", line 49, in test_goods_input
    self.assertEqual(eval(case.expect), res)
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'code': 1013, 'msg': '产品名称不能重复'} != {'code': 1000, 'msg': '商品录入成功'}
2021-06-28 17:39:50,847 - [test_business_goods_promote03.py -->line:78] - ERROR:测试编号:2,测试用例标题:token为空,执行失败,实际结果为:{'code': 1001, 'msg': 'token值不能为空'}
2021-06-28 17:39:50,848 - [test_business_goods_promote03.py -->line:79] - ERROR: :: 1 != 0
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_goods_promote07\test_business_goods_promote03.py", line 73, in test_goods_promote
    self.assertEqual(1, count)
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1 != 0
2021-06-28 17:39:51,066 - [test_business_goods_promote03.py -->line:78] - ERROR:测试编号:3,测试用例标题:token过期,执行失败,实际结果为:{'code': 1010, 'msg': '鉴权失败,请检查token是否失效'}
2021-06-28 17:39:51,067 - [test_business_goods_promote03.py -->line:79] - ERROR: :: 1 != 0
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_goods_promote07\test_business_goods_promote03.py", line 73, in test_goods_promote
    self.assertEqual(1, count)
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1 != 0
2021-06-28 17:39:51,210 - [test_business_goods_promote03.py -->line:78] - ERROR:测试编号:4,测试用例标题:错误token值,执行失败,实际结果为:{'code': 1010, 'msg': '鉴权失败,请检查token是否失效'}
2021-06-28 17:39:51,210 - [test_business_goods_promote03.py -->line:79] - ERROR: :: 1 != 0
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_goods_promote07\test_business_goods_promote03.py", line 73, in test_goods_promote
    self.assertEqual(1, count)
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1 != 0
2021-06-28 17:39:51,351 - [test_business_goods_promote03.py -->line:78] - ERROR:测试编号:5,测试用例标题:促销开始时间为空,执行失败,实际结果为:{'code': 1002, 'msg': '促销开始时间不能为空'}
2021-06-28 17:39:51,351 - [test_business_goods_promote03.py -->line:79] - ERROR: :: 1 != 0
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_goods_promote07\test_business_goods_promote03.py", line 73, in test_goods_promote
    self.assertEqual(1, count)
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1 != 0
2021-06-28 17:39:51,487 - [test_business_goods_promote03.py -->line:78] - ERROR:测试编号:6,测试用例标题:促销开始时间格式错误,执行失败,实际结果为:{'code': 1005, 'msg': '促销开始时间格式不正确'}
2021-06-28 17:39:51,487 - [test_business_goods_promote03.py -->line:79] - ERROR: :: 1 != 0
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_goods_promote07\test_business_goods_promote03.py", line 73, in test_goods_promote
    self.assertEqual(1, count)
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1 != 0
2021-06-28 17:39:51,627 - [test_business_goods_promote03.py -->line:78] - ERROR:测试编号:7,测试用例标题:促销开始时间早于当前时间,执行失败,实际结果为:{'code': 1008, 'msg': '促销开始时间必须大于当前时间'}
2021-06-28 17:39:51,627 - [test_business_goods_promote03.py -->line:79] - ERROR: :: 1 != 0
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_goods_promote07\test_business_goods_promote03.py", line 73, in test_goods_promote
    self.assertEqual(1, count)
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1 != 0
2021-06-28 17:39:51,766 - [test_business_goods_promote03.py -->line:78] - ERROR:测试编号:8,测试用例标题:促销结束时间为空,执行失败,实际结果为:{'code': 1003, 'msg': '促销结束时间不能为空'}
2021-06-28 17:39:51,766 - [test_business_goods_promote03.py -->line:79] - ERROR: :: 1 != 0
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_goods_promote07\test_business_goods_promote03.py", line 73, in test_goods_promote
    self.assertEqual(1, count)
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1 != 0
2021-06-28 17:39:51,904 - [test_business_goods_promote03.py -->line:78] - ERROR:测试编号:9,测试用例标题:促销结束时间格式错误,执行失败,实际结果为:{'code': 1006, 'msg': '促销结束时间格式不正确'}
2021-06-28 17:39:51,904 - [test_business_goods_promote03.py -->line:79] - ERROR: :: 1 != 0
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_goods_promote07\test_business_goods_promote03.py", line 73, in test_goods_promote
    self.assertEqual(1, count)
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1 != 0
2021-06-28 17:39:52,042 - [test_business_goods_promote03.py -->line:78] - ERROR:测试编号:10,测试用例标题:商品编号为空,执行失败,实际结果为:{'code': 1004, 'msg': '商品编号不能为空'}
2021-06-28 17:39:52,042 - [test_business_goods_promote03.py -->line:79] - ERROR: :: 1 != 0
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_goods_promote07\test_business_goods_promote03.py", line 73, in test_goods_promote
    self.assertEqual(1, count)
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1 != 0
2021-06-28 17:39:52,179 - [test_business_goods_promote03.py -->line:78] - ERROR:测试编号:11,测试用例标题:商品编号非6位数字,执行失败,实际结果为:{'code': 1007, 'msg': '商品编号格式不正确'}
2021-06-28 17:39:52,179 - [test_business_goods_promote03.py -->line:79] - ERROR: :: 1 != 0
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_goods_promote07\test_business_goods_promote03.py", line 73, in test_goods_promote
    self.assertEqual(1, count)
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1 != 0
2021-06-28 17:39:52,316 - [test_business_goods_promote03.py -->line:78] - ERROR:测试编号:12,测试用例标题:商品编号非数字,执行失败,实际结果为:{'code': 1007, 'msg': '商品编号格式不正确'}
2021-06-28 17:39:52,316 - [test_business_goods_promote03.py -->line:79] - ERROR: :: 1 != 0
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_goods_promote07\test_business_goods_promote03.py", line 73, in test_goods_promote
    self.assertEqual(1, count)
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1 != 0
2021-06-28 17:39:52,456 - [test_business_goods_promote03.py -->line:78] - ERROR:测试编号:13,测试用例标题:商品编号不存在,执行失败,实际结果为:{'code': 1011, 'msg': '该商品不存在'}
2021-06-28 17:39:52,456 - [test_business_goods_promote03.py -->line:79] - ERROR: :: 1 != 0
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_goods_promote07\test_business_goods_promote03.py", line 73, in test_goods_promote
    self.assertEqual(1, count)
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1 != 0
2021-06-28 17:39:52,594 - [test_business_goods_promote03.py -->line:78] - ERROR:测试编号:14,测试用例标题:促销开始时间晚于促销结束时间,执行失败,实际结果为:{'code': 1009, 'msg': '促销结束时间必须大于等于促销开始时间'}
2021-06-28 17:39:52,594 - [test_business_goods_promote03.py -->line:79] - ERROR: :: 1 != 0
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_goods_promote07\test_business_goods_promote03.py", line 73, in test_goods_promote
    self.assertEqual(1, count)
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 1 != 0
2021-06-28 17:53:19,162 - [test_business_regist04.py -->line:59] - ERROR:测试编号:17,测试用例标题:手机号码不支持号段,执行失败,实际结果为:{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2021-06-28 17:53:19,162 - [test_business_regist04.py -->line:60] - ERROR:{'code': 1008, 'msg': '手机号格式错误'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
- {'code': 1008, 'msg': '手机号格式错误'}
+ {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_regist03\test_business_regist04.py", line 51, in test_register
    self.assertEqual(eval(case.expect), res)  # 判定响应结果
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1008, 'msg': '手机号格式错误'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
- {'code': 1008, 'msg': '手机号格式错误'}
+ {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2021-06-28 17:53:19,869 - [test_business_token_goodsInfo03.py -->line:74] - ERROR:测试编号:2,测试用例标题:正常流程_所有条件组合,执行失败,实际结果为:{'code': 1008, 'msg': '没有符合条件的数据'}
2021-06-28 17:53:19,869 - [test_business_token_goodsInfo03.py -->line:75] - ERROR:'查询成功' not found in "{'code': 1008, 'msg': '没有符合条件的数据'}"
Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_token_goodsInfo04\test_business_token_goodsInfo03.py", line 49, in test_token_goods_info
    self.assertIn(case.expect, str(res))  # 判定响应结果包含 查询成功
  File "D:\Tools\Python\lib\unittest\case.py", line 1106, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '查询成功' not found in "{'code': 1008, 'msg': '没有符合条件的数据'}"
2021-06-28 17:53:20,020 - [test_business_token_goodsInfo03.py -->line:74] - ERROR:测试编号:3,测试用例标题:正常流程_部分条件组合1,执行失败,实际结果为:{'code': 1008, 'msg': '没有符合条件的数据'}
2021-06-28 17:53:20,020 - [test_business_token_goodsInfo03.py -->line:75] - ERROR:'查询成功' not found in "{'code': 1008, 'msg': '没有符合条件的数据'}"
Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_token_goodsInfo04\test_business_token_goodsInfo03.py", line 49, in test_token_goods_info
    self.assertIn(case.expect, str(res))  # 判定响应结果包含 查询成功
  File "D:\Tools\Python\lib\unittest\case.py", line 1106, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '查询成功' not found in "{'code': 1008, 'msg': '没有符合条件的数据'}"
2021-06-28 17:53:20,177 - [test_business_token_goodsInfo03.py -->line:74] - ERROR:测试编号:4,测试用例标题:正常流程_部分条件组合2,执行失败,实际结果为:{'code': 1008, 'msg': '没有符合条件的数据'}
2021-06-28 17:53:20,177 - [test_business_token_goodsInfo03.py -->line:75] - ERROR:'查询成功' not found in "{'code': 1008, 'msg': '没有符合条件的数据'}"
Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_token_goodsInfo04\test_business_token_goodsInfo03.py", line 49, in test_token_goods_info
    self.assertIn(case.expect, str(res))  # 判定响应结果包含 查询成功
  File "D:\Tools\Python\lib\unittest\case.py", line 1106, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '查询成功' not found in "{'code': 1008, 'msg': '没有符合条件的数据'}"
2021-06-29 10:46:46,186 - [test_business_goods_delete02.py -->line:52] - ERROR:测试编号:1,测试用例标题:正确流程,执行失败,实际结果为:{'code': 1004, 'msg': '该商品不存在'}
2021-06-29 10:46:46,187 - [test_business_goods_delete02.py -->line:53] - ERROR: :: {'code': 1000, 'msg': '商品删除成功'} != {'code': 1004, 'msg': '该商品不存在'}
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1000, 'msg': '商品删除成功'} != {'code': 1004, 'msg': '该商品不存在'}
- {'code': 1000, 'msg': '商品删除成功'}
?             ^            ^^^^

+ {'code': 1004, 'msg': '该商品不存在'}
?             ^          +  ^^^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_goods_delete08\test_business_goods_delete02.py", line 45, in test_goods_delete
    self.assertEqual(eval(case.expect), res)
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'code': 1000, 'msg': '商品删除成功'} != {'code': 1004, 'msg': '该商品不存在'}
2021-06-29 10:49:14,958 - [test_business_goods_delete03.py -->line:53] - ERROR:测试编号:3,测试用例标题:token已失效,执行失败,实际结果为:{'code': 1004, 'msg': '该商品不存在'}
2021-06-29 10:49:14,958 - [test_business_goods_delete03.py -->line:54] - ERROR: :: {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'} != {'code': 1004, 'msg': '该商品不存在'}
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'} != {'code': 1004, 'msg': '该商品不存在'}
- {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'}
+ {'code': 1004, 'msg': '该商品不存在'}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_goods_delete08\test_business_goods_delete03.py", line 46, in test_goods_delete
    self.assertEqual(eval(case.expect), res)
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'} != {'code': 1004, 'msg': '该商品不存在'}
2021-06-29 10:49:15,115 - [test_business_goods_delete03.py -->line:53] - ERROR:测试编号:4,测试用例标题:token值错误,执行失败,实际结果为:{'code': 1004, 'msg': '该商品不存在'}
2021-06-29 10:49:15,115 - [test_business_goods_delete03.py -->line:54] - ERROR: :: {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'} != {'code': 1004, 'msg': '该商品不存在'}
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'} != {'code': 1004, 'msg': '该商品不存在'}
- {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'}
+ {'code': 1004, 'msg': '该商品不存在'}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_goods_delete08\test_business_goods_delete03.py", line 46, in test_goods_delete
    self.assertEqual(eval(case.expect), res)
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'} != {'code': 1004, 'msg': '该商品不存在'}
2021-06-29 10:49:15,261 - [test_business_goods_delete03.py -->line:53] - ERROR:测试编号:5,测试用例标题:token值区分大小写,执行失败,实际结果为:{'code': 1004, 'msg': '该商品不存在'}
2021-06-29 10:49:15,262 - [test_business_goods_delete03.py -->line:54] - ERROR: :: {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'} != {'code': 1004, 'msg': '该商品不存在'}
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'} != {'code': 1004, 'msg': '该商品不存在'}
- {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'}
+ {'code': 1004, 'msg': '该商品不存在'}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_goods_delete08\test_business_goods_delete03.py", line 46, in test_goods_delete
    self.assertEqual(eval(case.expect), res)
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'} != {'code': 1004, 'msg': '该商品不存在'}
2021-06-29 10:49:15,416 - [test_business_goods_delete03.py -->line:53] - ERROR:测试编号:6,测试用例标题:上一个未失效的token值,执行失败,实际结果为:{'code': 1004, 'msg': '该商品不存在'}
2021-06-29 10:49:15,417 - [test_business_goods_delete03.py -->line:54] - ERROR: :: {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'} != {'code': 1004, 'msg': '该商品不存在'}
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'} != {'code': 1004, 'msg': '该商品不存在'}
- {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'}
+ {'code': 1004, 'msg': '该商品不存在'}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_goods_delete08\test_business_goods_delete03.py", line 46, in test_goods_delete
    self.assertEqual(eval(case.expect), res)
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'} != {'code': 1004, 'msg': '该商品不存在'}
2021-06-29 10:58:58,130 - [test_business_goods_delete03.py -->line:59] - ERROR:测试编号:3,测试用例标题:token已失效,执行失败,实际结果为:{'code': 1004, 'msg': '该商品不存在'}
2021-06-29 10:58:58,130 - [test_business_goods_delete03.py -->line:60] - ERROR: :: {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'} != {'code': 1004, 'msg': '该商品不存在'}
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'} != {'code': 1004, 'msg': '该商品不存在'}
- {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'}
+ {'code': 1004, 'msg': '该商品不存在'}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_goods_delete08\test_business_goods_delete03.py", line 52, in test_goods_delete
    self.assertEqual(eval(case.expect), res)
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'} != {'code': 1004, 'msg': '该商品不存在'}
2021-06-29 10:58:58,277 - [test_business_goods_delete03.py -->line:59] - ERROR:测试编号:4,测试用例标题:token值错误,执行失败,实际结果为:{'code': 1004, 'msg': '该商品不存在'}
2021-06-29 10:58:58,277 - [test_business_goods_delete03.py -->line:60] - ERROR: :: {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'} != {'code': 1004, 'msg': '该商品不存在'}
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'} != {'code': 1004, 'msg': '该商品不存在'}
- {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'}
+ {'code': 1004, 'msg': '该商品不存在'}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_goods_delete08\test_business_goods_delete03.py", line 52, in test_goods_delete
    self.assertEqual(eval(case.expect), res)
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'} != {'code': 1004, 'msg': '该商品不存在'}
2021-06-29 10:58:58,421 - [test_business_goods_delete03.py -->line:59] - ERROR:测试编号:5,测试用例标题:上一个未失效的token值,执行失败,实际结果为:{'code': 1004, 'msg': '该商品不存在'}
2021-06-29 10:58:58,421 - [test_business_goods_delete03.py -->line:60] - ERROR: :: {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'} != {'code': 1004, 'msg': '该商品不存在'}
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'} != {'code': 1004, 'msg': '该商品不存在'}
- {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'}
+ {'code': 1004, 'msg': '该商品不存在'}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_goods_delete08\test_business_goods_delete03.py", line 52, in test_goods_delete
    self.assertEqual(eval(case.expect), res)
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'} != {'code': 1004, 'msg': '该商品不存在'}
2021-06-29 10:59:24,762 - [test_business_goods_delete03.py -->line:59] - ERROR:测试编号:3,测试用例标题:token已失效,执行失败,实际结果为:{'code': 1004, 'msg': '该商品不存在'}
2021-06-29 10:59:24,762 - [test_business_goods_delete03.py -->line:60] - ERROR: :: {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'} != {'code': 1004, 'msg': '该商品不存在'}
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'} != {'code': 1004, 'msg': '该商品不存在'}
- {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'}
+ {'code': 1004, 'msg': '该商品不存在'}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_goods_delete08\test_business_goods_delete03.py", line 52, in test_goods_delete
    self.assertEqual(eval(case.expect), res)
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'} != {'code': 1004, 'msg': '该商品不存在'}
2021-06-29 10:59:24,922 - [test_business_goods_delete03.py -->line:59] - ERROR:测试编号:4,测试用例标题:token值错误,执行失败,实际结果为:{'code': 1004, 'msg': '该商品不存在'}
2021-06-29 10:59:24,923 - [test_business_goods_delete03.py -->line:60] - ERROR: :: {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'} != {'code': 1004, 'msg': '该商品不存在'}
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'} != {'code': 1004, 'msg': '该商品不存在'}
- {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'}
+ {'code': 1004, 'msg': '该商品不存在'}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_goods_delete08\test_business_goods_delete03.py", line 52, in test_goods_delete
    self.assertEqual(eval(case.expect), res)
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'} != {'code': 1004, 'msg': '该商品不存在'}
2021-06-29 10:59:25,077 - [test_business_goods_delete03.py -->line:59] - ERROR:测试编号:5,测试用例标题:上一个未失效的token值,执行失败,实际结果为:{'code': 1004, 'msg': '该商品不存在'}
2021-06-29 10:59:25,077 - [test_business_goods_delete03.py -->line:60] - ERROR: :: {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'} != {'code': 1004, 'msg': '该商品不存在'}
Traceback (most recent call last):
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'} != {'code': 1004, 'msg': '该商品不存在'}
- {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'}
+ {'code': 1004, 'msg': '该商品不存在'}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_goods_delete08\test_business_goods_delete03.py", line 52, in test_goods_delete
    self.assertEqual(eval(case.expect), res)
  File "D:\Tools\PyCharm Community Edition 2020.1.2\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'} != {'code': 1004, 'msg': '该商品不存在'}
2021-06-29 11:14:09,384 - [test_business_goods_delete03.py -->line:59] - ERROR:测试编号:3,测试用例标题:token已失效,执行失败,实际结果为:{'code': 1004, 'msg': '该商品不存在'}
2021-06-29 11:14:09,385 - [test_business_goods_delete03.py -->line:60] - ERROR:{'code': 1007, 'msg': '鉴权失败,请检查token是否失效'} != {'code': 1004, 'msg': '该商品不存在'}
- {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'}
+ {'code': 1004, 'msg': '该商品不存在'}
Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_goods_delete08\test_business_goods_delete03.py", line 52, in test_goods_delete
    self.assertEqual(eval(case.expect), res)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'} != {'code': 1004, 'msg': '该商品不存在'}
- {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'}
+ {'code': 1004, 'msg': '该商品不存在'}
2021-06-29 11:14:09,531 - [test_business_goods_delete03.py -->line:59] - ERROR:测试编号:4,测试用例标题:token值错误,执行失败,实际结果为:{'code': 1004, 'msg': '该商品不存在'}
2021-06-29 11:14:09,531 - [test_business_goods_delete03.py -->line:60] - ERROR:{'code': 1007, 'msg': '鉴权失败,请检查token是否失效'} != {'code': 1004, 'msg': '该商品不存在'}
- {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'}
+ {'code': 1004, 'msg': '该商品不存在'}
Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_goods_delete08\test_business_goods_delete03.py", line 52, in test_goods_delete
    self.assertEqual(eval(case.expect), res)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'} != {'code': 1004, 'msg': '该商品不存在'}
- {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'}
+ {'code': 1004, 'msg': '该商品不存在'}
2021-06-29 11:14:09,687 - [test_business_goods_delete03.py -->line:59] - ERROR:测试编号:5,测试用例标题:上一个未失效的token值,执行失败,实际结果为:{'code': 1004, 'msg': '该商品不存在'}
2021-06-29 11:14:09,687 - [test_business_goods_delete03.py -->line:60] - ERROR:{'code': 1007, 'msg': '鉴权失败,请检查token是否失效'} != {'code': 1004, 'msg': '该商品不存在'}
- {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'}
+ {'code': 1004, 'msg': '该商品不存在'}
Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_goods_delete08\test_business_goods_delete03.py", line 52, in test_goods_delete
    self.assertEqual(eval(case.expect), res)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'} != {'code': 1004, 'msg': '该商品不存在'}
- {'code': 1007, 'msg': '鉴权失败,请检查token是否失效'}
+ {'code': 1004, 'msg': '该商品不存在'}
2021-06-29 11:14:14,973 - [test_business_regist04.py -->line:59] - ERROR:测试编号:17,测试用例标题:手机号码不支持号段,执行失败,实际结果为:{'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2021-06-29 11:14:14,973 - [test_business_regist04.py -->line:60] - ERROR:{'code': 1008, 'msg': '手机号格式错误'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
- {'code': 1008, 'msg': '手机号格式错误'}
+ {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_regist03\test_business_regist04.py", line 51, in test_register
    self.assertEqual(eval(case.expect), res)  # 判定响应结果
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 1008, 'msg': '手机号格式错误'} != {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
- {'code': 1008, 'msg': '手机号格式错误'}
+ {'code': 1013, 'msg': '该用户名、手机号、邮箱已经被注册'}
2021-06-29 11:14:15,709 - [test_business_token_goodsInfo03.py -->line:74] - ERROR:测试编号:2,测试用例标题:正常流程_所有条件组合,执行失败,实际结果为:{'code': 1008, 'msg': '没有符合条件的数据'}
2021-06-29 11:14:15,710 - [test_business_token_goodsInfo03.py -->line:75] - ERROR:'查询成功' not found in "{'code': 1008, 'msg': '没有符合条件的数据'}"
Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_token_goodsInfo04\test_business_token_goodsInfo03.py", line 49, in test_token_goods_info
    self.assertIn(case.expect, str(res))  # 判定响应结果包含 查询成功
  File "D:\Tools\Python\lib\unittest\case.py", line 1106, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '查询成功' not found in "{'code': 1008, 'msg': '没有符合条件的数据'}"
2021-06-29 11:14:15,865 - [test_business_token_goodsInfo03.py -->line:74] - ERROR:测试编号:3,测试用例标题:正常流程_部分条件组合1,执行失败,实际结果为:{'code': 1008, 'msg': '没有符合条件的数据'}
2021-06-29 11:14:15,865 - [test_business_token_goodsInfo03.py -->line:75] - ERROR:'查询成功' not found in "{'code': 1008, 'msg': '没有符合条件的数据'}"
Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_token_goodsInfo04\test_business_token_goodsInfo03.py", line 49, in test_token_goods_info
    self.assertIn(case.expect, str(res))  # 判定响应结果包含 查询成功
  File "D:\Tools\Python\lib\unittest\case.py", line 1106, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '查询成功' not found in "{'code': 1008, 'msg': '没有符合条件的数据'}"
2021-06-29 11:14:16,008 - [test_business_token_goodsInfo03.py -->line:74] - ERROR:测试编号:4,测试用例标题:正常流程_部分条件组合2,执行失败,实际结果为:{'code': 1008, 'msg': '没有符合条件的数据'}
2021-06-29 11:14:16,008 - [test_business_token_goodsInfo03.py -->line:75] - ERROR:'查询成功' not found in "{'code': 1008, 'msg': '没有符合条件的数据'}"
Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_business_token_goodsInfo04\test_business_token_goodsInfo03.py", line 49, in test_token_goods_info
    self.assertIn(case.expect, str(res))  # 判定响应结果包含 查询成功
  File "D:\Tools\Python\lib\unittest\case.py", line 1106, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '查询成功' not found in "{'code': 1008, 'msg': '没有符合条件的数据'}"
2021-06-29 11:14:26,667 - [test_regist07.py -->line:44] - ERROR:测试编号12,测试用例标题邮箱不能为空,执行失败,实际结果：{'code': 1006, 'msg': '邮箱不能为空'}
2021-06-29 11:14:26,667 - [test_regist07.py -->line:45] - ERROR:{'code': 10066, 'msg': '邮箱不能为空'} != {'code': 1006, 'msg': '邮箱不能为空'}
- {'code': 10066, 'msg': '邮箱不能为空'}
?              -

+ {'code': 1006, 'msg': '邮箱不能为空'}
Traceback (most recent call last):
  File "D:\Tools\PythonWorkSpace\autotest03_business\testcases\test_my_interface01\test_regist07.py", line 40, in test_register
    self.assertEqual(eval(case.expect), res_body)
  File "D:\Tools\Python\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\Tools\Python\lib\unittest\case.py", line 1138, in assertDictEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\Tools\Python\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: {'code': 10066, 'msg': '邮箱不能为空'} != {'code': 1006, 'msg': '邮箱不能为空'}
- {'code': 10066, 'msg': '邮箱不能为空'}
?              -

+ {'code': 1006, 'msg': '邮箱不能为空'}
